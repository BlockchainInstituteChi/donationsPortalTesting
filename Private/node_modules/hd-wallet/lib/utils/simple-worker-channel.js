'use strict';

var cov_2f0158i4ii = function () {
    var path = '/home/g/dev/hd-wallet/src/utils/simple-worker-channel.js',
        hash = 'c73b4bfb104f3e2d9cda0faf7d9fd6766a0b8096',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/utils/simple-worker-channel.js',
        statementMap: {
            '0': {
                start: {
                    line: 18,
                    column: 8
                },
                end: {
                    line: 18,
                    column: 29
                }
            },
            '1': {
                start: {
                    line: 19,
                    column: 8
                },
                end: {
                    line: 19,
                    column: 26
                }
            },
            '2': {
                start: {
                    line: 20,
                    column: 8
                },
                end: {
                    line: 20,
                    column: 56
                }
            },
            '3': {
                start: {
                    line: 22,
                    column: 8
                },
                end: {
                    line: 22,
                    column: 20
                }
            },
            '4': {
                start: {
                    line: 26,
                    column: 8
                },
                end: {
                    line: 26,
                    column: 64
                }
            },
            '5': {
                start: {
                    line: 30,
                    column: 8
                },
                end: {
                    line: 34,
                    column: 11
                }
            },
            '6': {
                start: {
                    line: 31,
                    column: 12
                },
                end: {
                    line: 31,
                    column: 47
                }
            },
            '7': {
                start: {
                    line: 32,
                    column: 12
                },
                end: {
                    line: 32,
                    column: 61
                }
            },
            '8': {
                start: {
                    line: 33,
                    column: 12
                },
                end: {
                    line: 33,
                    column: 25
                }
            },
            '9': {
                start: {
                    line: 38,
                    column: 26
                },
                end: {
                    line: 38,
                    column: 38
                }
            },
            '10': {
                start: {
                    line: 39,
                    column: 20
                },
                end: {
                    line: 39,
                    column: 35
                }
            },
            '11': {
                start: {
                    line: 40,
                    column: 8
                },
                end: {
                    line: 43,
                    column: 9
                }
            },
            '12': {
                start: {
                    line: 41,
                    column: 12
                },
                end: {
                    line: 41,
                    column: 28
                }
            },
            '13': {
                start: {
                    line: 42,
                    column: 12
                },
                end: {
                    line: 42,
                    column: 35
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 17,
                        column: 4
                    },
                    end: {
                        line: 17,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 17,
                        column: 32
                    },
                    end: {
                        line: 23,
                        column: 5
                    }
                },
                line: 17
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 25,
                        column: 4
                    },
                    end: {
                        line: 25,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 25,
                        column: 11
                    },
                    end: {
                        line: 27,
                        column: 5
                    }
                },
                line: 25
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 29,
                        column: 4
                    },
                    end: {
                        line: 29,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 29,
                        column: 43
                    },
                    end: {
                        line: 35,
                        column: 5
                    }
                },
                line: 29
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 30,
                        column: 27
                    },
                    end: {
                        line: 30,
                        column: 28
                    }
                },
                loc: {
                    start: {
                        line: 30,
                        column: 40
                    },
                    end: {
                        line: 34,
                        column: 9
                    }
                },
                line: 30
            },
            '4': {
                name: '(anonymous_4)',
                decl: {
                    start: {
                        line: 37,
                        column: 4
                    },
                    end: {
                        line: 37,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 37,
                        column: 31
                    },
                    end: {
                        line: 44,
                        column: 5
                    }
                },
                line: 37
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 40,
                        column: 8
                    },
                    end: {
                        line: 43,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 40,
                        column: 8
                    },
                    end: {
                        line: 43,
                        column: 9
                    }
                }, {
                    start: {
                        line: 40,
                        column: 8
                    },
                    end: {
                        line: 43,
                        column: 9
                    }
                }],
                line: 40
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0
        },
        b: {
            '0': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Super simple webworker interface.

// Used ONLY for the address generation;
// socket worker + discovery workers have more complicated protocols

// requires an exclusive access to worker.
// does NOT require worker to reply in a linear manner
var WorkerChannel = exports.WorkerChannel = function () {
    function WorkerChannel(worker) {
        _classCallCheck(this, WorkerChannel);

        this.lastI = 0;
        cov_2f0158i4ii.f[0]++;
        cov_2f0158i4ii.s[0]++;

        this.worker = worker;
        cov_2f0158i4ii.s[1]++;
        this.pending = {};
        cov_2f0158i4ii.s[2]++;
        this.onMessage = this.receiveMessage.bind(this);
        // this.onError = this.receiveError.bind(this);
        cov_2f0158i4ii.s[3]++;
        this.open();
    }

    _createClass(WorkerChannel, [{
        key: 'open',
        value: function open() {
            cov_2f0158i4ii.f[1]++;
            cov_2f0158i4ii.s[4]++;

            this.worker.addEventListener('message', this.onMessage);
        }
    }, {
        key: 'postMessage',
        value: function postMessage(msg) {
            var _this = this;

            cov_2f0158i4ii.f[2]++;
            cov_2f0158i4ii.s[5]++;

            return new Promise(function (resolve) {
                cov_2f0158i4ii.f[3]++;
                cov_2f0158i4ii.s[6]++;

                _this.pending[_this.lastI] = resolve;
                cov_2f0158i4ii.s[7]++;
                _this.worker.postMessage(_extends({}, msg, { i: _this.lastI }));
                cov_2f0158i4ii.s[8]++;
                _this.lastI++;
            });
        }
    }, {
        key: 'receiveMessage',
        value: function receiveMessage(event) {
            cov_2f0158i4ii.f[4]++;

            var i = (cov_2f0158i4ii.s[9]++, event.data.i);
            var dfd = (cov_2f0158i4ii.s[10]++, this.pending[i]);
            cov_2f0158i4ii.s[11]++;
            if (dfd) {
                cov_2f0158i4ii.b[0][0]++;
                cov_2f0158i4ii.s[12]++;

                dfd(event.data);
                cov_2f0158i4ii.s[13]++;
                delete this.pending[i];
            } else {
                cov_2f0158i4ii.b[0][1]++;
            }
        }
    }]);

    return WorkerChannel;
}();