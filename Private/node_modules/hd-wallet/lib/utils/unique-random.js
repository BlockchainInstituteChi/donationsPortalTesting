'use strict';

var cov_23af0zjuul = function () {
    var path = '/home/g/dev/hd-wallet/src/utils/unique-random.js',
        hash = 'ee859b999b7c5dc8eceeafeabe3366f07cd31493',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/utils/unique-random.js',
        statementMap: {
            '0': {
                start: {
                    line: 9,
                    column: 20
                },
                end: {
                    line: 11,
                    column: 29
                }
            },
            '1': {
                start: {
                    line: 12,
                    column: 19
                },
                end: {
                    line: 12,
                    column: 49
                }
            },
            '2': {
                start: {
                    line: 13,
                    column: 22
                },
                end: {
                    line: 19,
                    column: 9
                }
            },
            '3': {
                start: {
                    line: 20,
                    column: 22
                },
                end: {
                    line: 20,
                    column: 50
                }
            },
            '4': {
                start: {
                    line: 22,
                    column: 17
                },
                end: {
                    line: 22,
                    column: 68
                }
            },
            '5': {
                start: {
                    line: 23,
                    column: 12
                },
                end: {
                    line: 23,
                    column: 13
                }
            },
            '6': {
                start: {
                    line: 24,
                    column: 4
                },
                end: {
                    line: 27,
                    column: 5
                }
            },
            '7': {
                start: {
                    line: 25,
                    column: 8
                },
                end: {
                    line: 25,
                    column: 24
                }
            },
            '8': {
                start: {
                    line: 26,
                    column: 8
                },
                end: {
                    line: 26,
                    column: 32
                }
            },
            '9': {
                start: {
                    line: 29,
                    column: 4
                },
                end: {
                    line: 29,
                    column: 13
                }
            }
        },
        fnMap: {
            '0': {
                name: 'uniqueRandom',
                decl: {
                    start: {
                        line: 8,
                        column: 16
                    },
                    end: {
                        line: 8,
                        column: 28
                    }
                },
                loc: {
                    start: {
                        line: 8,
                        column: 54
                    },
                    end: {
                        line: 30,
                        column: 1
                    }
                },
                line: 8
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 9,
                        column: 20
                    },
                    end: {
                        line: 11,
                        column: 29
                    }
                },
                type: 'cond-expr',
                locations: [{
                    start: {
                        line: 10,
                        column: 11
                    },
                    end: {
                        line: 10,
                        column: 54
                    }
                }, {
                    start: {
                        line: 11,
                        column: 10
                    },
                    end: {
                        line: 11,
                        column: 29
                    }
                }],
                line: 9
            },
            '1': {
                loc: {
                    start: {
                        line: 10,
                        column: 11
                    },
                    end: {
                        line: 10,
                        column: 54
                    }
                },
                type: 'cond-expr',
                locations: [{
                    start: {
                        line: 10,
                        column: 29
                    },
                    end: {
                        line: 10,
                        column: 36
                    }
                }, {
                    start: {
                        line: 10,
                        column: 39
                    },
                    end: {
                        line: 10,
                        column: 54
                    }
                }],
                line: 10
            },
            '2': {
                loc: {
                    start: {
                        line: 13,
                        column: 22
                    },
                    end: {
                        line: 19,
                        column: 9
                    }
                },
                type: 'cond-expr',
                locations: [{
                    start: {
                        line: 14,
                        column: 10
                    },
                    end: {
                        line: 14,
                        column: 16
                    }
                }, {
                    start: {
                        line: 16,
                        column: 12
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                }],
                line: 13
            },
            '3': {
                loc: {
                    start: {
                        line: 16,
                        column: 12
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                },
                type: 'cond-expr',
                locations: [{
                    start: {
                        line: 17,
                        column: 14
                    },
                    end: {
                        line: 17,
                        column: 32
                    }
                }, {
                    start: {
                        line: 18,
                        column: 14
                    },
                    end: {
                        line: 18,
                        column: 44
                    }
                }],
                line: 16
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0
        },
        f: {
            '0': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0],
            '2': [0, 0],
            '3': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

// Simple pseudo-randomness that's based on a simple fingerprinting
// Used so the order of backends is always the same on a computer

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.uniqueRandom = uniqueRandom;

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function uniqueRandom(maxNonInclusive) {
    cov_23af0zjuul.f[0]++;

    var version = (cov_23af0zjuul.s[0]++, typeof navigator === 'undefined' ? (cov_23af0zjuul.b[0][0]++, process == null ? (cov_23af0zjuul.b[1][0]++, 'weird') : (cov_23af0zjuul.b[1][1]++, process.version)) : (cov_23af0zjuul.b[0][1]++, navigator.userAgent));
    var offset = (cov_23af0zjuul.s[1]++, new Date().getTimezoneOffset());
    var languages = (cov_23af0zjuul.s[2]++, typeof navigator === 'undefined' ? (cov_23af0zjuul.b[2][0]++, 'node') : (cov_23af0zjuul.b[2][1]++, navigator.languages == null ? (cov_23af0zjuul.b[3][0]++, navigator.language) : (cov_23af0zjuul.b[3][1]++, navigator.languages.toString())));
    var allString = (cov_23af0zjuul.s[3]++, version + offset + languages);

    var hash = (cov_23af0zjuul.s[4]++, _crypto2.default.createHash('md5').update(allString).digest());
    var r = (cov_23af0zjuul.s[5]++, 0);
    cov_23af0zjuul.s[6]++;
    for (var i = 0; i < hash.length; i++) {
        cov_23af0zjuul.s[7]++;

        r = r + hash[i];
        cov_23af0zjuul.s[8]++;
        r = r % maxNonInclusive;
    }

    cov_23af0zjuul.s[9]++;
    return r;
}