'use strict';

var cov_10o9xe4dmd = function () {
    var path = '/home/g/dev/hd-wallet/src/socketio-worker/inside.js',
        hash = 'b0639e158b8145b512aab578508c1d283d1aa26a',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/socketio-worker/inside.js',
        statementMap: {
            '0': {
                start: {
                    line: 44,
                    column: 23
                },
                end: {
                    line: 44,
                    column: 27
                }
            },
            '1': {
                start: {
                    line: 45,
                    column: 42
                },
                end: {
                    line: 45,
                    column: 44
                }
            },
            '2': {
                start: {
                    line: 48,
                    column: 0
                },
                end: {
                    line: 120,
                    column: 2
                }
            },
            '3': {
                start: {
                    line: 49,
                    column: 17
                },
                end: {
                    line: 49,
                    column: 39
                }
            },
            '4': {
                start: {
                    line: 51,
                    column: 4
                },
                end: {
                    line: 68,
                    column: 5
                }
            },
            '5': {
                start: {
                    line: 52,
                    column: 43
                },
                end: {
                    line: 52,
                    column: 47
                }
            },
            '6': {
                start: {
                    line: 53,
                    column: 8
                },
                end: {
                    line: 56,
                    column: 11
                }
            },
            '7': {
                start: {
                    line: 57,
                    column: 8
                },
                end: {
                    line: 61,
                    column: 10
                }
            },
            '8': {
                start: {
                    line: 58,
                    column: 12
                },
                end: {
                    line: 60,
                    column: 14
                }
            },
            '9': {
                start: {
                    line: 62,
                    column: 8
                },
                end: {
                    line: 67,
                    column: 11
                }
            },
            '10': {
                start: {
                    line: 63,
                    column: 12
                },
                end: {
                    line: 65,
                    column: 15
                }
            },
            '11': {
                start: {
                    line: 66,
                    column: 12
                },
                end: {
                    line: 66,
                    column: 20
                }
            },
            '12': {
                start: {
                    line: 70,
                    column: 4
                },
                end: {
                    line: 85,
                    column: 5
                }
            },
            '13': {
                start: {
                    line: 73,
                    column: 8
                },
                end: {
                    line: 78,
                    column: 9
                }
            },
            '14': {
                start: {
                    line: 75,
                    column: 12
                },
                end: {
                    line: 75,
                    column: 43
                }
            },
            '15': {
                start: {
                    line: 80,
                    column: 8
                },
                end: {
                    line: 82,
                    column: 9
                }
            },
            '16': {
                start: {
                    line: 81,
                    column: 12
                },
                end: {
                    line: 81,
                    column: 36
                }
            },
            '17': {
                start: {
                    line: 83,
                    column: 8
                },
                end: {
                    line: 83,
                    column: 22
                }
            },
            '18': {
                start: {
                    line: 84,
                    column: 8
                },
                end: {
                    line: 84,
                    column: 16
                }
            },
            '19': {
                start: {
                    line: 87,
                    column: 4
                },
                end: {
                    line: 97,
                    column: 5
                }
            },
            '20': {
                start: {
                    line: 88,
                    column: 30
                },
                end: {
                    line: 94,
                    column: 9
                }
            },
            '21': {
                start: {
                    line: 89,
                    column: 12
                },
                end: {
                    line: 93,
                    column: 15
                }
            },
            '22': {
                start: {
                    line: 95,
                    column: 8
                },
                end: {
                    line: 95,
                    column: 40
                }
            },
            '23': {
                start: {
                    line: 96,
                    column: 8
                },
                end: {
                    line: 96,
                    column: 45
                }
            },
            '24': {
                start: {
                    line: 99,
                    column: 4
                },
                end: {
                    line: 105,
                    column: 5
                }
            },
            '25': {
                start: {
                    line: 100,
                    column: 30
                },
                end: {
                    line: 100,
                    column: 45
                }
            },
            '26': {
                start: {
                    line: 101,
                    column: 8
                },
                end: {
                    line: 103,
                    column: 9
                }
            },
            '27': {
                start: {
                    line: 102,
                    column: 12
                },
                end: {
                    line: 102,
                    column: 61
                }
            },
            '28': {
                start: {
                    line: 104,
                    column: 8
                },
                end: {
                    line: 104,
                    column: 31
                }
            },
            '29': {
                start: {
                    line: 107,
                    column: 4
                },
                end: {
                    line: 109,
                    column: 5
                }
            },
            '30': {
                start: {
                    line: 108,
                    column: 8
                },
                end: {
                    line: 108,
                    column: 61
                }
            },
            '31': {
                start: {
                    line: 111,
                    column: 4
                },
                end: {
                    line: 119,
                    column: 5
                }
            },
            '32': {
                start: {
                    line: 112,
                    column: 8
                },
                end: {
                    line: 118,
                    column: 11
                }
            },
            '33': {
                start: {
                    line: 113,
                    column: 12
                },
                end: {
                    line: 117,
                    column: 15
                }
            },
            '34': {
                start: {
                    line: 124,
                    column: 4
                },
                end: {
                    line: 126,
                    column: 6
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 48,
                        column: 12
                    },
                    end: {
                        line: 48,
                        column: 13
                    }
                },
                loc: {
                    start: {
                        line: 48,
                        column: 45
                    },
                    end: {
                        line: 120,
                        column: 1
                    }
                },
                line: 48
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 57,
                        column: 29
                    },
                    end: {
                        line: 57,
                        column: 30
                    }
                },
                loc: {
                    start: {
                        line: 58,
                        column: 12
                    },
                    end: {
                        line: 60,
                        column: 14
                    }
                },
                line: 58
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 62,
                        column: 35
                    },
                    end: {
                        line: 62,
                        column: 36
                    }
                },
                loc: {
                    start: {
                        line: 62,
                        column: 42
                    },
                    end: {
                        line: 67,
                        column: 9
                    }
                },
                line: 62
            },
            '3': {
                name: 'fun',
                decl: {
                    start: {
                        line: 75,
                        column: 34
                    },
                    end: {
                        line: 75,
                        column: 37
                    }
                },
                loc: {
                    start: {
                        line: 75,
                        column: 40
                    },
                    end: {
                        line: 75,
                        column: 42
                    }
                },
                line: 75
            },
            '4': {
                name: '(anonymous_4)',
                decl: {
                    start: {
                        line: 88,
                        column: 30
                    },
                    end: {
                        line: 88,
                        column: 31
                    }
                },
                loc: {
                    start: {
                        line: 88,
                        column: 47
                    },
                    end: {
                        line: 94,
                        column: 9
                    }
                },
                line: 88
            },
            '5': {
                name: '(anonymous_5)',
                decl: {
                    start: {
                        line: 112,
                        column: 34
                    },
                    end: {
                        line: 112,
                        column: 35
                    }
                },
                loc: {
                    start: {
                        line: 112,
                        column: 45
                    },
                    end: {
                        line: 118,
                        column: 9
                    }
                },
                line: 112
            },
            '6': {
                name: 'doPostMessage',
                decl: {
                    start: {
                        line: 122,
                        column: 9
                    },
                    end: {
                        line: 122,
                        column: 22
                    }
                },
                loc: {
                    start: {
                        line: 122,
                        column: 37
                    },
                    end: {
                        line: 127,
                        column: 1
                    }
                },
                line: 122
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 51,
                        column: 4
                    },
                    end: {
                        line: 68,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 51,
                        column: 4
                    },
                    end: {
                        line: 68,
                        column: 5
                    }
                }, {
                    start: {
                        line: 51,
                        column: 4
                    },
                    end: {
                        line: 68,
                        column: 5
                    }
                }],
                line: 51
            },
            '1': {
                loc: {
                    start: {
                        line: 70,
                        column: 4
                    },
                    end: {
                        line: 85,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 70,
                        column: 4
                    },
                    end: {
                        line: 85,
                        column: 5
                    }
                }, {
                    start: {
                        line: 70,
                        column: 4
                    },
                    end: {
                        line: 85,
                        column: 5
                    }
                }],
                line: 70
            },
            '2': {
                loc: {
                    start: {
                        line: 80,
                        column: 8
                    },
                    end: {
                        line: 82,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 80,
                        column: 8
                    },
                    end: {
                        line: 82,
                        column: 9
                    }
                }, {
                    start: {
                        line: 80,
                        column: 8
                    },
                    end: {
                        line: 82,
                        column: 9
                    }
                }],
                line: 80
            },
            '3': {
                loc: {
                    start: {
                        line: 87,
                        column: 4
                    },
                    end: {
                        line: 97,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 87,
                        column: 4
                    },
                    end: {
                        line: 97,
                        column: 5
                    }
                }, {
                    start: {
                        line: 87,
                        column: 4
                    },
                    end: {
                        line: 97,
                        column: 5
                    }
                }],
                line: 87
            },
            '4': {
                loc: {
                    start: {
                        line: 99,
                        column: 4
                    },
                    end: {
                        line: 105,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 99,
                        column: 4
                    },
                    end: {
                        line: 105,
                        column: 5
                    }
                }, {
                    start: {
                        line: 99,
                        column: 4
                    },
                    end: {
                        line: 105,
                        column: 5
                    }
                }],
                line: 99
            },
            '5': {
                loc: {
                    start: {
                        line: 101,
                        column: 8
                    },
                    end: {
                        line: 103,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 101,
                        column: 8
                    },
                    end: {
                        line: 103,
                        column: 9
                    }
                }, {
                    start: {
                        line: 101,
                        column: 8
                    },
                    end: {
                        line: 103,
                        column: 9
                    }
                }],
                line: 101
            },
            '6': {
                loc: {
                    start: {
                        line: 107,
                        column: 4
                    },
                    end: {
                        line: 109,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 107,
                        column: 4
                    },
                    end: {
                        line: 109,
                        column: 5
                    }
                }, {
                    start: {
                        line: 107,
                        column: 4
                    },
                    end: {
                        line: 109,
                        column: 5
                    }
                }],
                line: 107
            },
            '7': {
                loc: {
                    start: {
                        line: 111,
                        column: 4
                    },
                    end: {
                        line: 119,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 111,
                        column: 4
                    },
                    end: {
                        line: 119,
                        column: 5
                    }
                }, {
                    start: {
                        line: 111,
                        column: 4
                    },
                    end: {
                        line: 119,
                        column: 5
                    }
                }],
                line: 111
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0,
            '14': 0,
            '15': 0,
            '16': 0,
            '17': 0,
            '18': 0,
            '19': 0,
            '20': 0,
            '21': 0,
            '22': 0,
            '23': 0,
            '24': 0,
            '25': 0,
            '26': 0,
            '27': 0,
            '28': 0,
            '29': 0,
            '30': 0,
            '31': 0,
            '32': 0,
            '33': 0,
            '34': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0],
            '2': [0, 0],
            '3': [0, 0],
            '4': [0, 0],
            '5': [0, 0],
            '6': [0, 0],
            '7': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var _socket2 = require('socket.io-client');

var _socket3 = _interopRequireDefault(_socket2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// socket.io is enclosed inside worker,
// because it behaves unpredictably + is slow
// (I don't like socket.io.)


var socket = (cov_10o9xe4dmd.s[0]++, null);
var events = (cov_10o9xe4dmd.s[1]++, {});

// eslint-disable-next-line no-undef
cov_10o9xe4dmd.s[2]++;
onmessage = function onmessage(event) {
    cov_10o9xe4dmd.f[0]++;

    var data = (cov_10o9xe4dmd.s[3]++, JSON.parse(event.data));

    cov_10o9xe4dmd.s[4]++;
    if (data.type === 'init') {
        cov_10o9xe4dmd.b[0][0]++;

        var _ref = (cov_10o9xe4dmd.s[5]++, data),
            _endpoint = _ref.endpoint,
            _connectionType = _ref.connectionType;

        cov_10o9xe4dmd.s[6]++;

        socket = (0, _socket3.default)(_endpoint, {
            transports: [_connectionType],
            reconnection: false
        });
        cov_10o9xe4dmd.s[7]++;
        socket.on('connect', function () {
            cov_10o9xe4dmd.f[1]++;
            cov_10o9xe4dmd.s[8]++;
            return doPostMessage({
                type: 'initDone'
            });
        });
        cov_10o9xe4dmd.s[9]++;
        socket.on('connect_error', function (e) {
            cov_10o9xe4dmd.f[2]++;
            cov_10o9xe4dmd.s[10]++;

            doPostMessage({
                type: 'initError'
            });
            cov_10o9xe4dmd.s[11]++;
            close();
        });
    } else {
        cov_10o9xe4dmd.b[0][1]++;
    }

    cov_10o9xe4dmd.s[12]++;
    if (data.type === 'close') {
        cov_10o9xe4dmd.b[1][0]++;
        cov_10o9xe4dmd.s[13]++;

        // a hack to prevent Firefox errors in karma tests
        // it doesn't break anything - since on closing the worker, no timeouts will ever happen anyway
        try {
            cov_10o9xe4dmd.s[14]++;

            // eslint-disable-next-line no-global-assign,no-native-reassign
            setTimeout = function fun() {
                cov_10o9xe4dmd.f[3]++;
            };
        } catch (e) {
            // intentionally empty - thread is closing anyway
        }

        cov_10o9xe4dmd.s[15]++;
        if (socket != null) {
            cov_10o9xe4dmd.b[2][0]++;
            cov_10o9xe4dmd.s[16]++;

            socket.disconnect(true);
        } else {
            cov_10o9xe4dmd.b[2][1]++;
        }
        cov_10o9xe4dmd.s[17]++;
        socket = null;
        cov_10o9xe4dmd.s[18]++;
        close();
    } else {
        cov_10o9xe4dmd.b[1][1]++;
    }

    cov_10o9xe4dmd.s[19]++;
    if (data.type === 'observe') {
        cov_10o9xe4dmd.b[3][0]++;
        cov_10o9xe4dmd.s[20]++;

        var eventFunction = function eventFunction(reply) {
            cov_10o9xe4dmd.f[4]++;
            cov_10o9xe4dmd.s[21]++;

            doPostMessage({
                type: 'emit',
                event: data.event,
                data: reply
            });
        };
        cov_10o9xe4dmd.s[22]++;
        events[data.id] = eventFunction;
        cov_10o9xe4dmd.s[23]++;
        socket.on(data.event, eventFunction);
    } else {
        cov_10o9xe4dmd.b[3][1]++;
    }

    cov_10o9xe4dmd.s[24]++;
    if (data.type === 'unobserve') {
        cov_10o9xe4dmd.b[4][0]++;

        var _eventFunction = (cov_10o9xe4dmd.s[25]++, events[data.id]);
        cov_10o9xe4dmd.s[26]++;
        if (socket != null) {
            cov_10o9xe4dmd.b[5][0]++;
            cov_10o9xe4dmd.s[27]++;

            socket.removeListener(data.event, _eventFunction);
        } else {
            cov_10o9xe4dmd.b[5][1]++;
        }
        cov_10o9xe4dmd.s[28]++;
        delete events[data.id];
    } else {
        cov_10o9xe4dmd.b[4][1]++;
    }

    cov_10o9xe4dmd.s[29]++;
    if (data.type === 'subscribe') {
        var _socket;

        cov_10o9xe4dmd.b[6][0]++;
        cov_10o9xe4dmd.s[30]++;

        (_socket = socket).emit.apply(_socket, ['subscribe', data.event].concat(_toConsumableArray(data.values)));
    } else {
        cov_10o9xe4dmd.b[6][1]++;
    }

    cov_10o9xe4dmd.s[31]++;
    if (data.type === 'send') {
        cov_10o9xe4dmd.b[7][0]++;
        cov_10o9xe4dmd.s[32]++;

        socket.send(data.message, function (reply) {
            cov_10o9xe4dmd.f[5]++;
            cov_10o9xe4dmd.s[33]++;

            doPostMessage({
                type: 'sendReply',
                reply: reply,
                id: data.id
            });
        });
    } else {
        cov_10o9xe4dmd.b[7][1]++;
    }
};

function doPostMessage(data) {
    cov_10o9xe4dmd.f[6]++;
    cov_10o9xe4dmd.s[34]++;

    /* $FlowIssue worker postMessage missing */
    postMessage(JSON.stringify(data));
}