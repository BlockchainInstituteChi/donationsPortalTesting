'use strict';

var cov_xn83l1wjt = function () {
    var path = '/home/g/dev/hd-wallet/src/build-tx/result.js',
        hash = '51f37436311603763066db123ffb798860db923f',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/build-tx/result.js',
        statementMap: {
            '0': {
                start: {
                    line: 30,
                    column: 29
                },
                end: {
                    line: 33,
                    column: 1
                }
            },
            '1': {
                start: {
                    line: 36,
                    column: 16
                },
                end: {
                    line: 36,
                    column: 33
                }
            },
            '2': {
                start: {
                    line: 37,
                    column: 16
                },
                end: {
                    line: 37,
                    column: 33
                }
            },
            '3': {
                start: {
                    line: 38,
                    column: 23
                },
                end: {
                    line: 38,
                    column: 47
                }
            },
            '4': {
                start: {
                    line: 39,
                    column: 18
                },
                end: {
                    line: 39,
                    column: 37
                }
            },
            '5': {
                start: {
                    line: 40,
                    column: 23
                },
                end: {
                    line: 40,
                    column: 47
                }
            },
            '6': {
                start: {
                    line: 42,
                    column: 4
                },
                end: {
                    line: 49,
                    column: 6
                }
            },
            '7': {
                start: {
                    line: 56,
                    column: 16
                },
                end: {
                    line: 56,
                    column: 33
                }
            },
            '8': {
                start: {
                    line: 57,
                    column: 16
                },
                end: {
                    line: 57,
                    column: 33
                }
            },
            '9': {
                start: {
                    line: 58,
                    column: 23
                },
                end: {
                    line: 58,
                    column: 47
                }
            },
            '10': {
                start: {
                    line: 59,
                    column: 18
                },
                end: {
                    line: 59,
                    column: 37
                }
            },
            '11': {
                start: {
                    line: 60,
                    column: 23
                },
                end: {
                    line: 60,
                    column: 47
                }
            },
            '12': {
                start: {
                    line: 62,
                    column: 4
                },
                end: {
                    line: 70,
                    column: 6
                }
            }
        },
        fnMap: {
            '0': {
                name: 'getNonfinalResult',
                decl: {
                    start: {
                        line: 35,
                        column: 16
                    },
                    end: {
                        line: 35,
                        column: 33
                    }
                },
                loc: {
                    start: {
                        line: 35,
                        column: 77
                    },
                    end: {
                        line: 50,
                        column: 1
                    }
                },
                line: 35
            },
            '1': {
                name: 'getFinalResult',
                decl: {
                    start: {
                        line: 52,
                        column: 16
                    },
                    end: {
                        line: 52,
                        column: 30
                    }
                },
                loc: {
                    start: {
                        line: 55,
                        column: 10
                    },
                    end: {
                        line: 71,
                        column: 1
                    }
                },
                line: 55
            }
        },
        branchMap: {},
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0
        },
        f: {
            '0': 0,
            '1': 0
        },
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.empty = undefined;
exports.getNonfinalResult = getNonfinalResult;
exports.getFinalResult = getFinalResult;

var _transaction = require('./transaction');

var transaction = _interopRequireWildcard(_transaction);

var _coinselect = require('./coinselect');

var coinselect = _interopRequireWildcard(_coinselect);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// ---------- Output from algorigthm
// 'nonfinal' - contains info about the outputs, but not Trezor tx
// 'final' - contains info about outputs + Trezor tx
// 'error' - some error, so far only NOT-ENOUGH-FUNDS and EMPTY strings
var empty = exports.empty = (cov_xn83l1wjt.s[0]++, {
    type: 'error',
    error: 'EMPTY'
});

function getNonfinalResult(result) {
    cov_xn83l1wjt.f[0]++;

    var max = (cov_xn83l1wjt.s[1]++, result.result.max);
    var fee = (cov_xn83l1wjt.s[2]++, result.result.fee);
    var feePerByte = (cov_xn83l1wjt.s[3]++, result.result.feePerByte);
    var bytes = (cov_xn83l1wjt.s[4]++, result.result.bytes);
    var totalSpent = (cov_xn83l1wjt.s[5]++, result.result.totalSpent);

    cov_xn83l1wjt.s[6]++;
    return {
        type: 'nonfinal',
        fee: fee,
        feePerByte: feePerByte,
        bytes: bytes,
        max: max,
        totalSpent: totalSpent
    };
}

function getFinalResult(result, transaction) {
    cov_xn83l1wjt.f[1]++;

    var max = (cov_xn83l1wjt.s[7]++, result.result.max);
    var fee = (cov_xn83l1wjt.s[8]++, result.result.fee);
    var feePerByte = (cov_xn83l1wjt.s[9]++, result.result.feePerByte);
    var bytes = (cov_xn83l1wjt.s[10]++, result.result.bytes);
    var totalSpent = (cov_xn83l1wjt.s[11]++, result.result.totalSpent);

    cov_xn83l1wjt.s[12]++;
    return {
        type: 'final',
        fee: fee,
        feePerByte: feePerByte,
        bytes: bytes,
        transaction: transaction,
        max: max,
        totalSpent: totalSpent
    };
}