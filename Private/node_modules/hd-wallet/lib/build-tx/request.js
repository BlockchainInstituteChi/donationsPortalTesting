'use strict';

var cov_1tsfjkebqf = function () {
    var path = '/home/g/dev/hd-wallet/src/build-tx/request.js',
        hash = '09f5375127f6da4453a970b9b34107d9237ee635',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/build-tx/request.js',
        statementMap: {
            '0': {
                start: {
                    line: 55,
                    column: 8
                },
                end: {
                    line: 58,
                    column: 5
                }
            },
            '1': {
                start: {
                    line: 60,
                    column: 4
                },
                end: {
                    line: 66,
                    column: 7
                }
            },
            '2': {
                start: {
                    line: 61,
                    column: 8
                },
                end: {
                    line: 65,
                    column: 9
                }
            },
            '3': {
                start: {
                    line: 62,
                    column: 12
                },
                end: {
                    line: 62,
                    column: 41
                }
            },
            '4': {
                start: {
                    line: 64,
                    column: 12
                },
                end: {
                    line: 64,
                    column: 43
                }
            },
            '5': {
                start: {
                    line: 68,
                    column: 4
                },
                end: {
                    line: 68,
                    column: 18
                }
            },
            '6': {
                start: {
                    line: 80,
                    column: 29
                },
                end: {
                    line: 80,
                    column: 121
                }
            },
            '7': {
                start: {
                    line: 80,
                    column: 54
                },
                end: {
                    line: 80,
                    column: 120
                }
            },
            '8': {
                start: {
                    line: 81,
                    column: 4
                },
                end: {
                    line: 83,
                    column: 5
                }
            },
            '9': {
                start: {
                    line: 82,
                    column: 8
                },
                end: {
                    line: 82,
                    column: 40
                }
            },
            '10': {
                start: {
                    line: 85,
                    column: 15
                },
                end: {
                    line: 85,
                    column: 110
                }
            },
            '11': {
                start: {
                    line: 85,
                    column: 43
                },
                end: {
                    line: 85,
                    column: 109
                }
            },
            '12': {
                start: {
                    line: 86,
                    column: 19
                },
                end: {
                    line: 86,
                    column: 48
                }
            },
            '13': {
                start: {
                    line: 88,
                    column: 4
                },
                end: {
                    line: 90,
                    column: 6
                }
            }
        },
        fnMap: {
            '0': {
                name: 'splitByCompleteness',
                decl: {
                    start: {
                        line: 46,
                        column: 16
                    },
                    end: {
                        line: 46,
                        column: 35
                    }
                },
                loc: {
                    start: {
                        line: 51,
                        column: 2
                    },
                    end: {
                        line: 69,
                        column: 1
                    }
                },
                line: 51
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 60,
                        column: 20
                    },
                    end: {
                        line: 60,
                        column: 21
                    }
                },
                loc: {
                    start: {
                        line: 60,
                        column: 30
                    },
                    end: {
                        line: 66,
                        column: 5
                    }
                },
                line: 60
            },
            '2': {
                name: 'getMax',
                decl: {
                    start: {
                        line: 71,
                        column: 16
                    },
                    end: {
                        line: 71,
                        column: 22
                    }
                },
                loc: {
                    start: {
                        line: 76,
                        column: 2
                    },
                    end: {
                        line: 91,
                        column: 1
                    }
                },
                line: 76
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 80,
                        column: 44
                    },
                    end: {
                        line: 80,
                        column: 45
                    }
                },
                loc: {
                    start: {
                        line: 80,
                        column: 54
                    },
                    end: {
                        line: 80,
                        column: 120
                    }
                },
                line: 80
            },
            '4': {
                name: '(anonymous_4)',
                decl: {
                    start: {
                        line: 85,
                        column: 33
                    },
                    end: {
                        line: 85,
                        column: 34
                    }
                },
                loc: {
                    start: {
                        line: 85,
                        column: 43
                    },
                    end: {
                        line: 85,
                        column: 109
                    }
                },
                line: 85
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 61,
                        column: 8
                    },
                    end: {
                        line: 65,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 61,
                        column: 8
                    },
                    end: {
                        line: 65,
                        column: 9
                    }
                }, {
                    start: {
                        line: 61,
                        column: 8
                    },
                    end: {
                        line: 65,
                        column: 9
                    }
                }],
                line: 61
            },
            '1': {
                loc: {
                    start: {
                        line: 61,
                        column: 12
                    },
                    end: {
                        line: 61,
                        column: 98
                    }
                },
                type: 'binary-expr',
                locations: [{
                    start: {
                        line: 61,
                        column: 12
                    },
                    end: {
                        line: 61,
                        column: 38
                    }
                }, {
                    start: {
                        line: 61,
                        column: 42
                    },
                    end: {
                        line: 61,
                        column: 68
                    }
                }, {
                    start: {
                        line: 61,
                        column: 72
                    },
                    end: {
                        line: 61,
                        column: 98
                    }
                }],
                line: 61
            },
            '2': {
                loc: {
                    start: {
                        line: 80,
                        column: 54
                    },
                    end: {
                        line: 80,
                        column: 120
                    }
                },
                type: 'binary-expr',
                locations: [{
                    start: {
                        line: 80,
                        column: 54
                    },
                    end: {
                        line: 80,
                        column: 90
                    }
                }, {
                    start: {
                        line: 80,
                        column: 94
                    },
                    end: {
                        line: 80,
                        column: 120
                    }
                }],
                line: 80
            },
            '3': {
                loc: {
                    start: {
                        line: 81,
                        column: 4
                    },
                    end: {
                        line: 83,
                        column: 5
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 81,
                        column: 4
                    },
                    end: {
                        line: 83,
                        column: 5
                    }
                }, {
                    start: {
                        line: 81,
                        column: 4
                    },
                    end: {
                        line: 83,
                        column: 5
                    }
                }],
                line: 81
            },
            '4': {
                loc: {
                    start: {
                        line: 85,
                        column: 43
                    },
                    end: {
                        line: 85,
                        column: 109
                    }
                },
                type: 'binary-expr',
                locations: [{
                    start: {
                        line: 85,
                        column: 43
                    },
                    end: {
                        line: 85,
                        column: 79
                    }
                }, {
                    start: {
                        line: 85,
                        column: 83
                    },
                    end: {
                        line: 85,
                        column: 109
                    }
                }],
                line: 85
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0, 0],
            '2': [0, 0],
            '3': [0, 0],
            '4': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.splitByCompleteness = splitByCompleteness;
exports.getMax = getMax;
function splitByCompleteness(outputs) {
    cov_1tsfjkebqf.f[0]++;

    var result = (cov_1tsfjkebqf.s[0]++, {
        complete: [],
        incomplete: []
    });

    cov_1tsfjkebqf.s[1]++;
    outputs.forEach(function (output) {
        cov_1tsfjkebqf.f[1]++;
        cov_1tsfjkebqf.s[2]++;

        if ((cov_1tsfjkebqf.b[1][0]++, output.type === 'complete') || (cov_1tsfjkebqf.b[1][1]++, output.type === 'send-max') || (cov_1tsfjkebqf.b[1][2]++, output.type === 'opreturn')) {
            cov_1tsfjkebqf.b[0][0]++;
            cov_1tsfjkebqf.s[3]++;

            result.complete.push(output);
        } else {
            cov_1tsfjkebqf.b[0][1]++;
            cov_1tsfjkebqf.s[4]++;

            result.incomplete.push(output);
        }
    });

    cov_1tsfjkebqf.s[5]++;
    return result;
}
// -------- Input to algoritm
// array of Request, which is either
//    - 'complete' - address + amount
//    - 'send-max' - address
//    - 'noaddress' - just amount
//    - 'send-max-noaddress' - no other info

function getMax(outputs) {
    cov_1tsfjkebqf.f[2]++;

    // first, call coinselect - either sendMax or bnb
    // and if the input data are complete, also make the whole transaction

    var countMaxRequests = (cov_1tsfjkebqf.s[6]++, outputs.filter(function (output) {
        cov_1tsfjkebqf.f[3]++;
        cov_1tsfjkebqf.s[7]++;
        return (cov_1tsfjkebqf.b[2][0]++, output.type === 'send-max-noaddress') || (cov_1tsfjkebqf.b[2][1]++, output.type === 'send-max');
    }));
    cov_1tsfjkebqf.s[8]++;
    if (countMaxRequests.length >= 2) {
        cov_1tsfjkebqf.b[3][0]++;
        cov_1tsfjkebqf.s[9]++;

        throw new Error('TWO-SEND-MAX');
    } else {
        cov_1tsfjkebqf.b[3][1]++;
    }

    var id = (cov_1tsfjkebqf.s[10]++, outputs.findIndex(function (output) {
        cov_1tsfjkebqf.f[4]++;
        cov_1tsfjkebqf.s[11]++;
        return (cov_1tsfjkebqf.b[4][0]++, output.type === 'send-max-noaddress') || (cov_1tsfjkebqf.b[4][1]++, output.type === 'send-max');
    }));
    var exists = (cov_1tsfjkebqf.s[12]++, countMaxRequests.length === 1);

    cov_1tsfjkebqf.s[13]++;
    return {
        id: id, exists: exists
    };
}