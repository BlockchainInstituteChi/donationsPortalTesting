"use strict";

var cov_1vma23fwcq = function () {
    var path = "/home/g/dev/hd-wallet/src/build-tx/permutation.js",
        hash = "d92fa052bab86fd5bb3ff090bb638e03978329ae",
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = "__coverage__",
        coverageData = {
        path: "/home/g/dev/hd-wallet/src/build-tx/permutation.js",
        statementMap: {
            "0": {
                start: {
                    line: 14,
                    column: 8
                },
                end: {
                    line: 14,
                    column: 29
                }
            },
            "1": {
                start: {
                    line: 15,
                    column: 8
                },
                end: {
                    line: 15,
                    column: 40
                }
            },
            "2": {
                start: {
                    line: 19,
                    column: 22
                },
                end: {
                    line: 19,
                    column: 42
                }
            },
            "3": {
                start: {
                    line: 23,
                    column: 28
                },
                end: {
                    line: 23,
                    column: 80
                }
            },
            "4": {
                start: {
                    line: 23,
                    column: 49
                },
                end: {
                    line: 23,
                    column: 79
                }
            },
            "5": {
                start: {
                    line: 24,
                    column: 20
                },
                end: {
                    line: 24,
                    column: 52
                }
            },
            "6": {
                start: {
                    line: 26,
                    column: 8
                },
                end: {
                    line: 28,
                    column: 11
                }
            },
            "7": {
                start: {
                    line: 27,
                    column: 12
                },
                end: {
                    line: 27,
                    column: 53
                }
            },
            "8": {
                start: {
                    line: 29,
                    column: 8
                },
                end: {
                    line: 29,
                    column: 19
                }
            },
            "9": {
                start: {
                    line: 33,
                    column: 8
                },
                end: {
                    line: 33,
                    column: 37
                }
            },
            "10": {
                start: {
                    line: 37,
                    column: 35
                },
                end: {
                    line: 37,
                    column: 55
                }
            },
            "11": {
                start: {
                    line: 38,
                    column: 36
                },
                end: {
                    line: 38,
                    column: 53
                }
            },
            "12": {
                start: {
                    line: 39,
                    column: 36
                },
                end: {
                    line: 39,
                    column: 67
                }
            },
            "13": {
                start: {
                    line: 40,
                    column: 8
                },
                end: {
                    line: 40,
                    column: 19
                }
            }
        },
        fnMap: {
            "0": {
                name: "(anonymous_0)",
                decl: {
                    start: {
                        line: 13,
                        column: 4
                    },
                    end: {
                        line: 13,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 13,
                        column: 62
                    },
                    end: {
                        line: 16,
                        column: 5
                    }
                },
                line: 13
            },
            "1": {
                name: "(anonymous_1)",
                decl: {
                    start: {
                        line: 18,
                        column: 4
                    },
                    end: {
                        line: 18,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 18,
                        column: 95
                    },
                    end: {
                        line: 30,
                        column: 5
                    }
                },
                line: 18
            },
            "2": {
                name: "(anonymous_2)",
                decl: {
                    start: {
                        line: 23,
                        column: 39
                    },
                    end: {
                        line: 23,
                        column: 40
                    }
                },
                loc: {
                    start: {
                        line: 23,
                        column: 49
                    },
                    end: {
                        line: 23,
                        column: 79
                    }
                },
                line: 23
            },
            "3": {
                name: "(anonymous_3)",
                decl: {
                    start: {
                        line: 26,
                        column: 20
                    },
                    end: {
                        line: 26,
                        column: 21
                    }
                },
                loc: {
                    start: {
                        line: 26,
                        column: 43
                    },
                    end: {
                        line: 28,
                        column: 9
                    }
                },
                line: 26
            },
            "4": {
                name: "(anonymous_4)",
                decl: {
                    start: {
                        line: 32,
                        column: 4
                    },
                    end: {
                        line: 32,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 32,
                        column: 63
                    },
                    end: {
                        line: 34,
                        column: 5
                    }
                },
                line: 32
            },
            "5": {
                name: "(anonymous_5)",
                decl: {
                    start: {
                        line: 36,
                        column: 4
                    },
                    end: {
                        line: 36,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 36,
                        column: 45
                    },
                    end: {
                        line: 41,
                        column: 5
                    }
                },
                line: 36
            }
        },
        branchMap: {},
        s: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0,
            "6": 0,
            "7": 0,
            "8": 0,
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0
        },
        f: {
            "0": 0,
            "1": 0,
            "2": 0,
            "3": 0,
            "4": 0,
            "5": 0
        },
        b: {},
        _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Helper class for permutation
var Permutation = exports.Permutation = function () {
    function Permutation(sorted, permutation) {
        _classCallCheck(this, Permutation);

        this.sorted = [];
        cov_1vma23fwcq.f[0]++;
        cov_1vma23fwcq.s[0]++;

        this.sorted = sorted;
        cov_1vma23fwcq.s[1]++;
        this._permutation = permutation;
    }

    // Permutation is an array,
    // where on Ith position is J, which means that Jth element in the original, unsorted
    // output array
    // is Ith in the new array.


    _createClass(Permutation, [{
        key: "forEach",
        value: function forEach(f) {
            cov_1vma23fwcq.f[4]++;
            cov_1vma23fwcq.s[9]++;

            this._permutation.forEach(f);
        }
    }, {
        key: "map",
        value: function map(fun) {
            cov_1vma23fwcq.f[5]++;

            var original = (cov_1vma23fwcq.s[10]++, this.sorted.map(fun));
            var perm = (cov_1vma23fwcq.s[11]++, this._permutation);
            var res = (cov_1vma23fwcq.s[12]++, new Permutation(original, perm));
            cov_1vma23fwcq.s[13]++;
            return res;
        }
    }], [{
        key: "fromFunction",
        value: function fromFunction(original, sort) {
            cov_1vma23fwcq.f[1]++;

            var range = (cov_1vma23fwcq.s[2]++, [].concat(_toConsumableArray(original.keys())));

            // I am "sorting range" - (0,1,2,3,...)
            // so I got the indexes and not the actual values inside
            var permutation = (cov_1vma23fwcq.s[3]++, range.sort(function (a, b) {
                cov_1vma23fwcq.f[2]++;
                cov_1vma23fwcq.s[4]++;
                return sort(original[a], original[b]);
            }));
            var res = (cov_1vma23fwcq.s[5]++, new Permutation([], permutation));

            cov_1vma23fwcq.s[6]++;
            res.forEach(function (originalIx, newIx) {
                cov_1vma23fwcq.f[3]++;
                cov_1vma23fwcq.s[7]++;

                res.sorted[newIx] = original[originalIx];
            });
            cov_1vma23fwcq.s[8]++;
            return res;
        }
    }]);

    return Permutation;
}();