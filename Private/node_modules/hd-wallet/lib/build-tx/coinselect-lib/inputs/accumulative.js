'use strict';

var cov_29kqvcqsby = function () {
    var path = '/home/g/dev/hd-wallet/src/build-tx/coinselect-lib/inputs/accumulative.js',
        hash = '07a6d244ba3e93191d9726f74e2669929aeb620d',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/build-tx/coinselect-lib/inputs/accumulative.js',
        statementMap: {
            '0': {
                start: {
                    line: 1,
                    column: 14
                },
                end: {
                    line: 1,
                    column: 33
                }
            },
            '1': {
                start: {
                    line: 5,
                    column: 0
                },
                end: {
                    line: 42,
                    column: 2
                }
            },
            '2': {
                start: {
                    line: 6,
                    column: 24
                },
                end: {
                    line: 6,
                    column: 43
                }
            },
            '3': {
                start: {
                    line: 7,
                    column: 31
                },
                end: {
                    line: 7,
                    column: 57
                }
            },
            '4': {
                start: {
                    line: 8,
                    column: 34
                },
                end: {
                    line: 8,
                    column: 55
                }
            },
            '5': {
                start: {
                    line: 10,
                    column: 4
                },
                end: {
                    line: 10,
                    column: 55
                }
            },
            '6': {
                start: {
                    line: 10,
                    column: 45
                },
                end: {
                    line: 10,
                    column: 55
                }
            },
            '7': {
                start: {
                    line: 11,
                    column: 21
                },
                end: {
                    line: 11,
                    column: 56
                }
            },
            '8': {
                start: {
                    line: 13,
                    column: 18
                },
                end: {
                    line: 13,
                    column: 19
                }
            },
            '9': {
                start: {
                    line: 14,
                    column: 19
                },
                end: {
                    line: 14,
                    column: 21
                }
            },
            '10': {
                start: {
                    line: 15,
                    column: 21
                },
                end: {
                    line: 15,
                    column: 44
                }
            },
            '11': {
                start: {
                    line: 17,
                    column: 4
                },
                end: {
                    line: 39,
                    column: 5
                }
            },
            '12': {
                start: {
                    line: 18,
                    column: 21
                },
                end: {
                    line: 18,
                    column: 29
                }
            },
            '13': {
                start: {
                    line: 19,
                    column: 26
                },
                end: {
                    line: 19,
                    column: 48
                }
            },
            '14': {
                start: {
                    line: 20,
                    column: 24
                },
                end: {
                    line: 20,
                    column: 43
                }
            },
            '15': {
                start: {
                    line: 21,
                    column: 26
                },
                end: {
                    line: 21,
                    column: 53
                }
            },
            '16': {
                start: {
                    line: 24,
                    column: 8
                },
                end: {
                    line: 27,
                    column: 9
                }
            },
            '17': {
                start: {
                    line: 25,
                    column: 12
                },
                end: {
                    line: 25,
                    column: 91
                }
            },
            '18': {
                start: {
                    line: 25,
                    column: 40
                },
                end: {
                    line: 25,
                    column: 91
                }
            },
            '19': {
                start: {
                    line: 26,
                    column: 12
                },
                end: {
                    line: 26,
                    column: 21
                }
            },
            '20': {
                start: {
                    line: 29,
                    column: 8
                },
                end: {
                    line: 29,
                    column: 32
                }
            },
            '21': {
                start: {
                    line: 30,
                    column: 8
                },
                end: {
                    line: 30,
                    column: 29
                }
            },
            '22': {
                start: {
                    line: 31,
                    column: 8
                },
                end: {
                    line: 31,
                    column: 26
                }
            },
            '23': {
                start: {
                    line: 33,
                    column: 20
                },
                end: {
                    line: 33,
                    column: 40
                }
            },
            '24': {
                start: {
                    line: 36,
                    column: 8
                },
                end: {
                    line: 36,
                    column: 47
                }
            },
            '25': {
                start: {
                    line: 36,
                    column: 38
                },
                end: {
                    line: 36,
                    column: 47
                }
            },
            '26': {
                start: {
                    line: 38,
                    column: 8
                },
                end: {
                    line: 38,
                    column: 112
                }
            },
            '27': {
                start: {
                    line: 41,
                    column: 4
                },
                end: {
                    line: 41,
                    column: 41
                }
            }
        },
        fnMap: {
            '0': {
                name: 'accumulative',
                decl: {
                    start: {
                        line: 5,
                        column: 26
                    },
                    end: {
                        line: 5,
                        column: 38
                    }
                },
                loc: {
                    start: {
                        line: 5,
                        column: 73
                    },
                    end: {
                        line: 42,
                        column: 1
                    }
                },
                line: 5
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 10,
                        column: 4
                    },
                    end: {
                        line: 10,
                        column: 55
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 10,
                        column: 4
                    },
                    end: {
                        line: 10,
                        column: 55
                    }
                }, {
                    start: {
                        line: 10,
                        column: 4
                    },
                    end: {
                        line: 10,
                        column: 55
                    }
                }],
                line: 10
            },
            '1': {
                loc: {
                    start: {
                        line: 24,
                        column: 8
                    },
                    end: {
                        line: 27,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 24,
                        column: 8
                    },
                    end: {
                        line: 27,
                        column: 9
                    }
                }, {
                    start: {
                        line: 24,
                        column: 8
                    },
                    end: {
                        line: 27,
                        column: 9
                    }
                }],
                line: 24
            },
            '2': {
                loc: {
                    start: {
                        line: 25,
                        column: 12
                    },
                    end: {
                        line: 25,
                        column: 91
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 25,
                        column: 12
                    },
                    end: {
                        line: 25,
                        column: 91
                    }
                }, {
                    start: {
                        line: 25,
                        column: 12
                    },
                    end: {
                        line: 25,
                        column: 91
                    }
                }],
                line: 25
            },
            '3': {
                loc: {
                    start: {
                        line: 36,
                        column: 8
                    },
                    end: {
                        line: 36,
                        column: 47
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 36,
                        column: 8
                    },
                    end: {
                        line: 36,
                        column: 47
                    }
                }, {
                    start: {
                        line: 36,
                        column: 8
                    },
                    end: {
                        line: 36,
                        column: 47
                    }
                }],
                line: 36
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0,
            '14': 0,
            '15': 0,
            '16': 0,
            '17': 0,
            '18': 0,
            '19': 0,
            '20': 0,
            '21': 0,
            '22': 0,
            '23': 0,
            '24': 0,
            '25': 0,
            '26': 0,
            '27': 0
        },
        f: {
            '0': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0],
            '2': [0, 0],
            '3': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var utils = (cov_29kqvcqsby.s[0]++, require('../utils'));

// add inputs until we reach or surpass the target value (or deplete)
// worst-case: O(n)
cov_29kqvcqsby.s[1]++;
module.exports = function accumulative(utxos, outputs, feeRate, options) {
    cov_29kqvcqsby.f[0]++;

    var inputLength = (cov_29kqvcqsby.s[2]++, options.inputLength);
    var changeOutputLength = (cov_29kqvcqsby.s[3]++, options.changeOutputLength);
    var explicitDustThreshold = (cov_29kqvcqsby.s[4]++, options.dustThreshold);

    cov_29kqvcqsby.s[5]++;
    if (!isFinite(utils.uintOrNaN(feeRate))) {
            cov_29kqvcqsby.b[0][0]++;
            cov_29kqvcqsby.s[6]++;
            return {};
        } else {
        cov_29kqvcqsby.b[0][1]++;
    }var bytesAccum = (cov_29kqvcqsby.s[7]++, utils.transactionBytes([], outputs));

    var inAccum = (cov_29kqvcqsby.s[8]++, 0);
    var inputs = (cov_29kqvcqsby.s[9]++, []);
    var outAccum = (cov_29kqvcqsby.s[10]++, utils.sumOrNaN(outputs));

    cov_29kqvcqsby.s[11]++;
    for (var i = 0; i < utxos.length; ++i) {
        var utxo = (cov_29kqvcqsby.s[12]++, utxos[i]);
        var utxoBytes = (cov_29kqvcqsby.s[13]++, utils.inputBytes(utxo));
        var utxoFee = (cov_29kqvcqsby.s[14]++, feeRate * utxoBytes);
        var utxoValue = (cov_29kqvcqsby.s[15]++, utils.uintOrNaN(utxo.value));

        // skip detrimental input
        cov_29kqvcqsby.s[16]++;
        if (utxoFee > utxo.value) {
            cov_29kqvcqsby.b[1][0]++;
            cov_29kqvcqsby.s[17]++;

            if (i === utxos.length - 1) {
                    cov_29kqvcqsby.b[2][0]++;
                    cov_29kqvcqsby.s[18]++;
                    return { fee: feeRate * (bytesAccum + utxoBytes) };
                } else {
                cov_29kqvcqsby.b[2][1]++;
            }cov_29kqvcqsby.s[19]++;
            continue;
        } else {
            cov_29kqvcqsby.b[1][1]++;
        }

        cov_29kqvcqsby.s[20]++;
        bytesAccum += utxoBytes;
        cov_29kqvcqsby.s[21]++;
        inAccum += utxoValue;
        cov_29kqvcqsby.s[22]++;
        inputs.push(utxo);

        var fee = (cov_29kqvcqsby.s[23]++, feeRate * bytesAccum);

        // go again?
        cov_29kqvcqsby.s[24]++;
        if (inAccum < outAccum + fee) {
                cov_29kqvcqsby.b[3][0]++;
                cov_29kqvcqsby.s[25]++;
                continue;
            } else {
            cov_29kqvcqsby.b[3][1]++;
        }cov_29kqvcqsby.s[26]++;
        return utils.finalize(inputs, outputs, feeRate, inputLength, changeOutputLength, explicitDustThreshold);
    }

    cov_29kqvcqsby.s[27]++;
    return { fee: feeRate * bytesAccum };
};