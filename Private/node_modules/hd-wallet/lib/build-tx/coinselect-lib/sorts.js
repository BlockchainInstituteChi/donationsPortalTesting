'use strict';

var cov_2jtiu3dsbs = function () {
    var path = '/home/g/dev/hd-wallet/src/build-tx/coinselect-lib/sorts.js',
        hash = '279e85117aa83c5758cd143906192459c2d6d8f5',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/build-tx/coinselect-lib/sorts.js',
        statementMap: {
            '0': {
                start: {
                    line: 1,
                    column: 14
                },
                end: {
                    line: 1,
                    column: 32
                }
            },
            '1': {
                start: {
                    line: 4,
                    column: 4
                },
                end: {
                    line: 10,
                    column: 6
                }
            },
            '2': {
                start: {
                    line: 5,
                    column: 27
                },
                end: {
                    line: 5,
                    column: 84
                }
            },
            '3': {
                start: {
                    line: 6,
                    column: 8
                },
                end: {
                    line: 8,
                    column: 9
                }
            },
            '4': {
                start: {
                    line: 7,
                    column: 12
                },
                end: {
                    line: 7,
                    column: 29
                }
            },
            '5': {
                start: {
                    line: 9,
                    column: 8
                },
                end: {
                    line: 9,
                    column: 27
                }
            },
            '6': {
                start: {
                    line: 13,
                    column: 0
                },
                end: {
                    line: 15,
                    column: 2
                }
            }
        },
        fnMap: {
            '0': {
                name: 'score',
                decl: {
                    start: {
                        line: 3,
                        column: 9
                    },
                    end: {
                        line: 3,
                        column: 14
                    }
                },
                loc: {
                    start: {
                        line: 3,
                        column: 24
                    },
                    end: {
                        line: 11,
                        column: 1
                    }
                },
                line: 3
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 4,
                        column: 11
                    },
                    end: {
                        line: 4,
                        column: 12
                    }
                },
                loc: {
                    start: {
                        line: 4,
                        column: 27
                    },
                    end: {
                        line: 10,
                        column: 5
                    }
                },
                line: 4
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 6,
                        column: 8
                    },
                    end: {
                        line: 8,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 6,
                        column: 8
                    },
                    end: {
                        line: 8,
                        column: 9
                    }
                }, {
                    start: {
                        line: 6,
                        column: 8
                    },
                    end: {
                        line: 8,
                        column: 9
                    }
                }],
                line: 6
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0
        },
        f: {
            '0': 0,
            '1': 0
        },
        b: {
            '0': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var utils = (cov_2jtiu3dsbs.s[0]++, require('./utils'));

function score(feeRate) {
    cov_2jtiu3dsbs.f[0]++;
    cov_2jtiu3dsbs.s[1]++;

    return function (a, b) {
        cov_2jtiu3dsbs.f[1]++;

        var difference = (cov_2jtiu3dsbs.s[2]++, utils.utxoScore(a, feeRate) - utils.utxoScore(b, feeRate));
        cov_2jtiu3dsbs.s[3]++;
        if (difference === 0) {
            cov_2jtiu3dsbs.b[0][0]++;
            cov_2jtiu3dsbs.s[4]++;

            return a.i - b.i;
        } else {
            cov_2jtiu3dsbs.b[0][1]++;
        }
        cov_2jtiu3dsbs.s[5]++;
        return -difference;
    };
}

cov_2jtiu3dsbs.s[6]++;
module.exports = {
    score: score
};