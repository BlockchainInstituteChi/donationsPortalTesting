'use strict';

var cov_2ewmlb1ow2 = function () {
    var path = '/home/g/dev/hd-wallet/src/discovery/worker/utils.js',
        hash = '8960437de839006c1f1880f004ded5e47b3cbc04',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/discovery/worker/utils.js',
        statementMap: {
            '0': {
                start: {
                    line: 7,
                    column: 17
                },
                end: {
                    line: 7,
                    column: 23
                }
            },
            '1': {
                start: {
                    line: 8,
                    column: 4
                },
                end: {
                    line: 8,
                    column: 39
                }
            },
            '2': {
                start: {
                    line: 9,
                    column: 17
                },
                end: {
                    line: 9,
                    column: 37
                }
            },
            '3': {
                start: {
                    line: 10,
                    column: 4
                },
                end: {
                    line: 10,
                    column: 39
                }
            },
            '4': {
                start: {
                    line: 11,
                    column: 4
                },
                end: {
                    line: 11,
                    column: 15
                }
            },
            '5': {
                start: {
                    line: 15,
                    column: 4
                },
                end: {
                    line: 15,
                    column: 45
                }
            },
            '6': {
                start: {
                    line: 15,
                    column: 37
                },
                end: {
                    line: 15,
                    column: 43
                }
            },
            '7': {
                start: {
                    line: 19,
                    column: 26
                },
                end: {
                    line: 19,
                    column: 28
                }
            },
            '8': {
                start: {
                    line: 20,
                    column: 4
                },
                end: {
                    line: 28,
                    column: 5
                }
            },
            '9': {
                start: {
                    line: 21,
                    column: 8
                },
                end: {
                    line: 27,
                    column: 9
                }
            },
            '10': {
                start: {
                    line: 22,
                    column: 12
                },
                end: {
                    line: 22,
                    column: 24
                }
            },
            '11': {
                start: {
                    line: 24,
                    column: 12
                },
                end: {
                    line: 26,
                    column: 13
                }
            },
            '12': {
                start: {
                    line: 25,
                    column: 16
                },
                end: {
                    line: 25,
                    column: 51
                }
            },
            '13': {
                start: {
                    line: 29,
                    column: 4
                },
                end: {
                    line: 29,
                    column: 15
                }
            }
        },
        fnMap: {
            '0': {
                name: 'getInputId',
                decl: {
                    start: {
                        line: 4,
                        column: 16
                    },
                    end: {
                        line: 4,
                        column: 26
                    }
                },
                loc: {
                    start: {
                        line: 6,
                        column: 10
                    },
                    end: {
                        line: 12,
                        column: 1
                    }
                },
                line: 6
            },
            '1': {
                name: 'objectValues',
                decl: {
                    start: {
                        line: 14,
                        column: 16
                    },
                    end: {
                        line: 14,
                        column: 28
                    }
                },
                loc: {
                    start: {
                        line: 14,
                        column: 60
                    },
                    end: {
                        line: 16,
                        column: 1
                    }
                },
                line: 14
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 15,
                        column: 30
                    },
                    end: {
                        line: 15,
                        column: 31
                    }
                },
                loc: {
                    start: {
                        line: 15,
                        column: 37
                    },
                    end: {
                        line: 15,
                        column: 43
                    }
                },
                line: 15
            },
            '3': {
                name: 'filterNull',
                decl: {
                    start: {
                        line: 18,
                        column: 16
                    },
                    end: {
                        line: 18,
                        column: 26
                    }
                },
                loc: {
                    start: {
                        line: 18,
                        column: 81
                    },
                    end: {
                        line: 30,
                        column: 1
                    }
                },
                line: 18
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 21,
                        column: 8
                    },
                    end: {
                        line: 27,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 21,
                        column: 8
                    },
                    end: {
                        line: 27,
                        column: 9
                    }
                }, {
                    start: {
                        line: 21,
                        column: 8
                    },
                    end: {
                        line: 27,
                        column: 9
                    }
                }],
                line: 21
            },
            '1': {
                loc: {
                    start: {
                        line: 24,
                        column: 12
                    },
                    end: {
                        line: 26,
                        column: 13
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 24,
                        column: 12
                    },
                    end: {
                        line: 26,
                        column: 13
                    }
                }, {
                    start: {
                        line: 24,
                        column: 12
                    },
                    end: {
                        line: 26,
                        column: 13
                    }
                }],
                line: 24
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getInputId = getInputId;
exports.objectValues = objectValues;
exports.filterNull = filterNull;
function getInputId(i) {
    cov_2ewmlb1ow2.f[0]++;

    var hash = (cov_2ewmlb1ow2.s[0]++, i.hash);
    cov_2ewmlb1ow2.s[1]++;
    Array.prototype.reverse.call(hash);
    var res = (cov_2ewmlb1ow2.s[2]++, hash.toString('hex'));
    cov_2ewmlb1ow2.s[3]++;
    Array.prototype.reverse.call(hash);
    cov_2ewmlb1ow2.s[4]++;
    return res;
}
function objectValues(k) {
    cov_2ewmlb1ow2.f[1]++;
    cov_2ewmlb1ow2.s[5]++;

    return Object.keys(k).map(function (key) {
        cov_2ewmlb1ow2.f[2]++;
        cov_2ewmlb1ow2.s[6]++;
        return k[key];
    });
}

function filterNull(k, throwErrorOnNull) {
    cov_2ewmlb1ow2.f[3]++;

    var res = (cov_2ewmlb1ow2.s[7]++, []);
    cov_2ewmlb1ow2.s[8]++;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = k[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            cov_2ewmlb1ow2.s[9]++;

            if (t != null) {
                cov_2ewmlb1ow2.b[0][0]++;
                cov_2ewmlb1ow2.s[10]++;

                res.push(t);
            } else {
                cov_2ewmlb1ow2.b[0][1]++;
                cov_2ewmlb1ow2.s[11]++;

                if (throwErrorOnNull) {
                    cov_2ewmlb1ow2.b[1][0]++;
                    cov_2ewmlb1ow2.s[12]++;

                    throw new Error('Unexpected null');
                } else {
                    cov_2ewmlb1ow2.b[1][1]++;
                }
            }
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    cov_2ewmlb1ow2.s[13]++;
    return res;
}