'use strict';

var cov_1krnoxd8i = function () {
    var path = '/home/g/dev/hd-wallet/src/discovery/worker/inside/blocks.js',
        hash = '2a5682cc2463193c89c9a3ce5b95f7989410848c',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/discovery/worker/inside/blocks.js',
        statementMap: {
            '0': {
                start: {
                    line: 22,
                    column: 26
                },
                end: {
                    line: 22,
                    column: 48
                }
            },
            '1': {
                start: {
                    line: 25,
                    column: 4
                },
                end: {
                    line: 48,
                    column: 7
                }
            },
            '2': {
                start: {
                    line: 29,
                    column: 45
                },
                end: {
                    line: 46,
                    column: 32
                }
            },
            '3': {
                start: {
                    line: 32,
                    column: 16
                },
                end: {
                    line: 37,
                    column: 17
                }
            },
            '4': {
                start: {
                    line: 33,
                    column: 20
                },
                end: {
                    line: 33,
                    column: 41
                }
            },
            '5': {
                start: {
                    line: 35,
                    column: 20
                },
                end: {
                    line: 35,
                    column: 70
                }
            },
            '6': {
                start: {
                    line: 36,
                    column: 20
                },
                end: {
                    line: 36,
                    column: 29
                }
            },
            '7': {
                start: {
                    line: 39,
                    column: 16
                },
                end: {
                    line: 42,
                    column: 17
                }
            },
            '8': {
                start: {
                    line: 40,
                    column: 20
                },
                end: {
                    line: 40,
                    column: 77
                }
            },
            '9': {
                start: {
                    line: 41,
                    column: 20
                },
                end: {
                    line: 41,
                    column: 29
                }
            },
            '10': {
                start: {
                    line: 43,
                    column: 16
                },
                end: {
                    line: 43,
                    column: 26
                }
            },
            '11': {
                start: {
                    line: 47,
                    column: 8
                },
                end: {
                    line: 47,
                    column: 70
                }
            },
            '12': {
                start: {
                    line: 47,
                    column: 48
                },
                end: {
                    line: 47,
                    column: 67
                }
            },
            '13': {
                start: {
                    line: 52,
                    column: 4
                },
                end: {
                    line: 53,
                    column: 58
                }
            },
            '14': {
                start: {
                    line: 53,
                    column: 39
                },
                end: {
                    line: 53,
                    column: 55
                }
            },
            '15': {
                start: {
                    line: 57,
                    column: 4
                },
                end: {
                    line: 58,
                    column: 69
                }
            },
            '16': {
                start: {
                    line: 58,
                    column: 41
                },
                end: {
                    line: 58,
                    column: 65
                }
            }
        },
        fnMap: {
            '0': {
                name: 'loadBlockRange',
                decl: {
                    start: {
                        line: 21,
                        column: 16
                    },
                    end: {
                        line: 21,
                        column: 30
                    }
                },
                loc: {
                    start: {
                        line: 21,
                        column: 79
                    },
                    end: {
                        line: 49,
                        column: 1
                    }
                },
                line: 21
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 25,
                        column: 34
                    },
                    end: {
                        line: 25,
                        column: 35
                    }
                },
                loc: {
                    start: {
                        line: 25,
                        column: 42
                    },
                    end: {
                        line: 48,
                        column: 5
                    }
                },
                line: 25
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 31,
                        column: 43
                    },
                    end: {
                        line: 31,
                        column: 44
                    }
                },
                loc: {
                    start: {
                        line: 31,
                        column: 54
                    },
                    end: {
                        line: 38,
                        column: 13
                    }
                },
                line: 31
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 38,
                        column: 15
                    },
                    end: {
                        line: 38,
                        column: 16
                    }
                },
                loc: {
                    start: {
                        line: 38,
                        column: 24
                    },
                    end: {
                        line: 44,
                        column: 13
                    }
                },
                line: 38
            },
            '4': {
                name: '(anonymous_4)',
                decl: {
                    start: {
                        line: 47,
                        column: 32
                    },
                    end: {
                        line: 47,
                        column: 33
                    }
                },
                loc: {
                    start: {
                        line: 47,
                        column: 48
                    },
                    end: {
                        line: 47,
                        column: 67
                    }
                },
                line: 47
            },
            '5': {
                name: 'getBlock',
                decl: {
                    start: {
                        line: 51,
                        column: 9
                    },
                    end: {
                        line: 51,
                        column: 17
                    }
                },
                loc: {
                    start: {
                        line: 51,
                        column: 50
                    },
                    end: {
                        line: 54,
                        column: 1
                    }
                },
                line: 51
            },
            '6': {
                name: '(anonymous_6)',
                decl: {
                    start: {
                        line: 53,
                        column: 28
                    },
                    end: {
                        line: 53,
                        column: 29
                    }
                },
                loc: {
                    start: {
                        line: 53,
                        column: 39
                    },
                    end: {
                        line: 53,
                        column: 55
                    }
                },
                line: 53
            },
            '7': {
                name: 'getCurrentBlock',
                decl: {
                    start: {
                        line: 56,
                        column: 9
                    },
                    end: {
                        line: 56,
                        column: 24
                    }
                },
                loc: {
                    start: {
                        line: 56,
                        column: 43
                    },
                    end: {
                        line: 59,
                        column: 1
                    }
                },
                line: 56
            },
            '8': {
                name: '(anonymous_8)',
                decl: {
                    start: {
                        line: 58,
                        column: 27
                    },
                    end: {
                        line: 58,
                        column: 28
                    }
                },
                loc: {
                    start: {
                        line: 58,
                        column: 39
                    },
                    end: {
                        line: 58,
                        column: 67
                    }
                },
                line: 58
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 29,
                        column: 45
                    },
                    end: {
                        line: 46,
                        column: 32
                    }
                },
                type: 'cond-expr',
                locations: [{
                    start: {
                        line: 31,
                        column: 14
                    },
                    end: {
                        line: 44,
                        column: 14
                    }
                }, {
                    start: {
                        line: 46,
                        column: 14
                    },
                    end: {
                        line: 46,
                        column: 32
                    }
                }],
                line: 29
            },
            '1': {
                loc: {
                    start: {
                        line: 32,
                        column: 16
                    },
                    end: {
                        line: 37,
                        column: 17
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 32,
                        column: 16
                    },
                    end: {
                        line: 37,
                        column: 17
                    }
                }, {
                    start: {
                        line: 32,
                        column: 16
                    },
                    end: {
                        line: 37,
                        column: 17
                    }
                }],
                line: 32
            },
            '2': {
                loc: {
                    start: {
                        line: 39,
                        column: 16
                    },
                    end: {
                        line: 42,
                        column: 17
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 39,
                        column: 16
                    },
                    end: {
                        line: 42,
                        column: 17
                    }
                }, {
                    start: {
                        line: 39,
                        column: 16
                    },
                    end: {
                        line: 42,
                        column: 17
                    }
                }],
                line: 39
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0,
            '14': 0,
            '15': 0,
            '16': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0],
            '2': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loadBlockRange = loadBlockRange;

var _channel = require('./channel');

// Some helper functions for loading block status
// from blockchain

// from which to which block do I need to do discovery
// based on whether there was a reorg, detected by last height/hash
function loadBlockRange(initialState) {
    cov_1krnoxd8i.f[0]++;

    var pBlock = (cov_1krnoxd8i.s[0]++, initialState.lastBlock);

    // first, I ask for last block I will do
    cov_1krnoxd8i.s[1]++;
    return getCurrentBlock().then(function (last) {
        cov_1krnoxd8i.f[1]++;

        // then I detect first block I will do
        // detect based on whether reorg is needed
        var firstHeight = (cov_1krnoxd8i.s[2]++, pBlock.height !== 0 ? (cov_1krnoxd8i.b[0][0]++, getBlock(pBlock.height).then(function (block) {
            cov_1krnoxd8i.f[2]++;
            cov_1krnoxd8i.s[3]++;

            if (block.hash === pBlock.hash) {
                cov_1krnoxd8i.b[1][0]++;
                cov_1krnoxd8i.s[4]++;

                return pBlock.height;
            } else {
                cov_1krnoxd8i.b[1][1]++;
                cov_1krnoxd8i.s[5]++;

                console.warn('Blockhash mismatch', pBlock, block);
                cov_1krnoxd8i.s[6]++;
                return 0;
            }
        }, function (err) {
            cov_1krnoxd8i.f[3]++;
            cov_1krnoxd8i.s[7]++;

            if (err.message === 'RPCError: Block height out of range') {
                cov_1krnoxd8i.b[2][0]++;
                cov_1krnoxd8i.s[8]++;

                console.warn('Block height out of range', pBlock.height);
                cov_1krnoxd8i.s[9]++;
                return 0;
            } else {
                cov_1krnoxd8i.b[2][1]++;
            }
            cov_1krnoxd8i.s[10]++;
            throw err;
        })) : (cov_1krnoxd8i.b[0][1]++, Promise.resolve(0)));
        cov_1krnoxd8i.s[11]++;
        return firstHeight.then(function (firstHeight) {
            cov_1krnoxd8i.f[4]++;
            cov_1krnoxd8i.s[12]++;
            return { firstHeight: firstHeight, last: last };
        });
    });
}

function getBlock(height) {
    cov_1krnoxd8i.f[5]++;
    cov_1krnoxd8i.s[13]++;

    return (0, _channel.lookupBlockHash)(height).then(function (hash) {
        cov_1krnoxd8i.f[6]++;
        cov_1krnoxd8i.s[14]++;
        return { hash: hash, height: height };
    });
}

function getCurrentBlock() {
    cov_1krnoxd8i.f[7]++;
    cov_1krnoxd8i.s[15]++;

    return (0, _channel.lookupSyncStatus)().then(function (height) {
        cov_1krnoxd8i.f[8]++;
        cov_1krnoxd8i.s[16]++;
        return getBlock(height);
    });
}