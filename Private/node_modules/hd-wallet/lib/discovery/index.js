'use strict';

// First, we describe all the types that go out of discovery
// and that are directly used in web wallet.

// Information about utxos
// UTXO == unspent transaction output = all I can spend


// Some info about output


// This is used for used addresses
// Where we display address and number of received BTC.
// NOTE: received does *not* mean current balance on address!!!
// We don't expose that to the user.
// It's really just sum of received outputs.


// Complete info about one account.
// (trezor usually has several accounts, 1 at minimum)


// This is number of currently loaded transactions.
// Used only for displaying "Loading..." status.
var cov_usvvicunl = function () {
    var path = '/home/g/dev/hd-wallet/src/discovery/index.js',
        hash = 'e9a96fa5cfa51dd4486233d1fa066a00264f8589',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/discovery/index.js',
        statementMap: {},
        fnMap: {},
        branchMap: {},
        s: {},
        f: {},
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();
// `discovery` is for account discovery process, plus monitoring.
// In this file, there is only Flow "interface", no actual code.
//
// Discovery for 1 trezor is from several account discoveries; we discover
// accounts one after another; howver, this is NOT dealt with in this library
// at all. This library deals with just one account.
//
// One class "implement" this - workeÅ•Discovery
//
// In the comments and in the names, "hash" and "id" are used interchangably
// and both mean the "reverse endian" hash that bitcoin uses for
// identification, not actual hash.
// Actual hash is not used anywhere in the API.

var _stream = require('../utils/stream');