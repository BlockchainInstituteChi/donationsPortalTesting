'use strict';

var cov_nklhtro56 = function () {
    var path = '/home/g/dev/hd-wallet/src/address-source.js',
        hash = '6444e59e86c5d3607c1c72b98a34b1494504a38e',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/g/dev/hd-wallet/src/address-source.js',
        statementMap: {
            '0': {
                start: {
                    line: 27,
                    column: 8
                },
                end: {
                    line: 27,
                    column: 31
                }
            },
            '1': {
                start: {
                    line: 28,
                    column: 8
                },
                end: {
                    line: 28,
                    column: 29
                }
            },
            '2': {
                start: {
                    line: 29,
                    column: 8
                },
                end: {
                    line: 29,
                    column: 27
                }
            },
            '3': {
                start: {
                    line: 36,
                    column: 41
                },
                end: {
                    line: 36,
                    column: 43
                }
            },
            '4': {
                start: {
                    line: 38,
                    column: 8
                },
                end: {
                    line: 56,
                    column: 9
                }
            },
            '5': {
                start: {
                    line: 39,
                    column: 32
                },
                end: {
                    line: 39,
                    column: 51
                }
            },
            '6': {
                start: {
                    line: 40,
                    column: 27
                },
                end: {
                    line: 40,
                    column: 29
                }
            },
            '7': {
                start: {
                    line: 42,
                    column: 12
                },
                end: {
                    line: 54,
                    column: 13
                }
            },
            '8': {
                start: {
                    line: 43,
                    column: 16
                },
                end: {
                    line: 43,
                    column: 52
                }
            },
            '9': {
                start: {
                    line: 47,
                    column: 28
                },
                end: {
                    line: 47,
                    column: 55
                }
            },
            '10': {
                start: {
                    line: 48,
                    column: 34
                },
                end: {
                    line: 48,
                    column: 60
                }
            },
            '11': {
                start: {
                    line: 49,
                    column: 16
                },
                end: {
                    line: 49,
                    column: 33
                }
            },
            '12': {
                start: {
                    line: 50,
                    column: 16
                },
                end: {
                    line: 50,
                    column: 36
                }
            },
            '13': {
                start: {
                    line: 51,
                    column: 16
                },
                end: {
                    line: 51,
                    column: 39
                }
            },
            '14': {
                start: {
                    line: 52,
                    column: 37
                },
                end: {
                    line: 52,
                    column: 62
                }
            },
            '15': {
                start: {
                    line: 53,
                    column: 16
                },
                end: {
                    line: 53,
                    column: 88
                }
            },
            '16': {
                start: {
                    line: 55,
                    column: 12
                },
                end: {
                    line: 55,
                    column: 37
                }
            },
            '17': {
                start: {
                    line: 57,
                    column: 8
                },
                end: {
                    line: 57,
                    column: 42
                }
            },
            '18': {
                start: {
                    line: 74,
                    column: 8
                },
                end: {
                    line: 74,
                    column: 31
                }
            },
            '19': {
                start: {
                    line: 75,
                    column: 8
                },
                end: {
                    line: 81,
                    column: 10
                }
            },
            '20': {
                start: {
                    line: 82,
                    column: 8
                },
                end: {
                    line: 82,
                    column: 31
                }
            },
            '21': {
                start: {
                    line: 83,
                    column: 8
                },
                end: {
                    line: 83,
                    column: 29
                }
            },
            '22': {
                start: {
                    line: 87,
                    column: 24
                },
                end: {
                    line: 94,
                    column: 9
                }
            },
            '23': {
                start: {
                    line: 95,
                    column: 8
                },
                end: {
                    line: 96,
                    column: 46
                }
            },
            '24': {
                start: {
                    line: 96,
                    column: 35
                },
                end: {
                    line: 96,
                    column: 44
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 26,
                        column: 4
                    },
                    end: {
                        line: 26,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 26,
                        column: 67
                    },
                    end: {
                        line: 30,
                        column: 5
                    }
                },
                line: 26
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 32,
                        column: 4
                    },
                    end: {
                        line: 32,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 35,
                        column: 30
                    },
                    end: {
                        line: 58,
                        column: 5
                    }
                },
                line: 35
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 73,
                        column: 4
                    },
                    end: {
                        line: 73,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 73,
                        column: 95
                    },
                    end: {
                        line: 84,
                        column: 5
                    }
                },
                line: 73
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 86,
                        column: 4
                    },
                    end: {
                        line: 86,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 86,
                        column: 74
                    },
                    end: {
                        line: 97,
                        column: 5
                    }
                },
                line: 86
            },
            '4': {
                name: '(anonymous_4)',
                decl: {
                    start: {
                        line: 96,
                        column: 18
                    },
                    end: {
                        line: 96,
                        column: 19
                    }
                },
                loc: {
                    start: {
                        line: 96,
                        column: 35
                    },
                    end: {
                        line: 96,
                        column: 44
                    }
                },
                line: 96
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 42,
                        column: 12
                    },
                    end: {
                        line: 54,
                        column: 13
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 42,
                        column: 12
                    },
                    end: {
                        line: 54,
                        column: 13
                    }
                }, {
                    start: {
                        line: 42,
                        column: 12
                    },
                    end: {
                        line: 54,
                        column: 13
                    }
                }],
                line: 42
            },
            '1': {
                loc: {
                    start: {
                        line: 93,
                        column: 27
                    },
                    end: {
                        line: 93,
                        column: 57
                    }
                },
                type: 'cond-expr',
                locations: [{
                    start: {
                        line: 93,
                        column: 52
                    },
                    end: {
                        line: 93,
                        column: 53
                    }
                }, {
                    start: {
                        line: 93,
                        column: 56
                    },
                    end: {
                        line: 93,
                        column: 57
                    }
                }],
                line: 93
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0,
            '14': 0,
            '15': 0,
            '16': 0,
            '17': 0,
            '18': 0,
            '19': 0,
            '20': 0,
            '21': 0,
            '22': 0,
            '23': 0,
            '24': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WorkerAddressSource = exports.BrowserAddressSource = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _bitcoinjsLibZcash = require('bitcoinjs-lib-zcash');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* 
 * Derivation of addresses from HD nodes
 */

var BrowserAddressSource = exports.BrowserAddressSource = function () {
    function BrowserAddressSource(hdnode, network, segwit) {
        _classCallCheck(this, BrowserAddressSource);

        cov_nklhtro56.f[0]++;
        cov_nklhtro56.s[0]++;

        this.network = network;
        cov_nklhtro56.s[1]++;
        this.segwit = segwit;
        cov_nklhtro56.s[2]++;
        this.node = hdnode;
    }

    _createClass(BrowserAddressSource, [{
        key: 'derive',
        value: function derive(first, last) {
            cov_nklhtro56.f[1]++;

            var addresses = (cov_nklhtro56.s[3]++, []);
            // const chainNode = HDNode.fromBase58(this.xpub, this.network).derive(this.chainId);
            cov_nklhtro56.s[4]++;
            for (var i = first; i <= last; i++) {
                var addressNode = (cov_nklhtro56.s[5]++, this.node.derive(i));
                var naddress = (cov_nklhtro56.s[6]++, '');

                cov_nklhtro56.s[7]++;
                if (!this.segwit) {
                    cov_nklhtro56.b[0][0]++;
                    cov_nklhtro56.s[8]++;

                    naddress = addressNode.getAddress();
                } else {
                    cov_nklhtro56.b[0][1]++;

                    // see https://github.com/bitcoin/bips/blob/master/bip-0049.mediawiki
                    // address derivation + test vectors
                    var pkh = (cov_nklhtro56.s[9]++, addressNode.getIdentifier());
                    var scriptSig = (cov_nklhtro56.s[10]++, new Buffer(pkh.length + 2));
                    cov_nklhtro56.s[11]++;
                    scriptSig[0] = 0;
                    cov_nklhtro56.s[12]++;
                    scriptSig[1] = 0x14;
                    cov_nklhtro56.s[13]++;
                    pkh.copy(scriptSig, 2);
                    var addressBytes = (cov_nklhtro56.s[14]++, _bitcoinjsLibZcash.crypto.hash160(scriptSig));
                    cov_nklhtro56.s[15]++;
                    naddress = _bitcoinjsLibZcash.address.toBase58Check(addressBytes, this.network.scriptHash);
                }
                cov_nklhtro56.s[16]++;
                addresses.push(naddress);
            }
            cov_nklhtro56.s[17]++;
            return Promise.resolve(addresses);
        }
    }]);

    return BrowserAddressSource;
}();

var WorkerAddressSource = exports.WorkerAddressSource = function () {
    function WorkerAddressSource(channel, node, version, segwit) {
        _classCallCheck(this, WorkerAddressSource);

        cov_nklhtro56.f[2]++;
        cov_nklhtro56.s[18]++;

        this.channel = channel;
        cov_nklhtro56.s[19]++;
        this.node = {
            depth: node.depth,
            child_num: node.index,
            fingerprint: node.parentFingerprint,
            chain_code: Array.prototype.slice.call(node.chainCode),
            public_key: Array.prototype.slice.call(node.keyPair.getPublicKeyBuffer())
        };
        cov_nklhtro56.s[20]++;
        this.version = version;
        cov_nklhtro56.s[21]++;
        this.segwit = segwit;
    }

    _createClass(WorkerAddressSource, [{
        key: 'derive',
        value: function derive(firstIndex, lastIndex) {
            cov_nklhtro56.f[3]++;

            var request = (cov_nklhtro56.s[22]++, {
                type: 'deriveAddressRange',
                node: this.node,
                version: this.version,
                firstIndex: firstIndex,
                lastIndex: lastIndex,
                addressFormat: this.segwit === 'p2sh' ? (cov_nklhtro56.b[1][0]++, 1) : (cov_nklhtro56.b[1][1]++, 0)
            });
            cov_nklhtro56.s[23]++;
            return this.channel.postMessage(request).then(function (_ref) {
                var addresses = _ref.addresses;
                cov_nklhtro56.f[4]++;
                cov_nklhtro56.s[24]++;
                return addresses;
            });
        }
    }]);

    return WorkerAddressSource;
}();